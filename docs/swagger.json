{
    "swagger": "2.0",
    "info": {
        "description": "API for exploring Ethereum blocks.",
        "title": "Ethereum Block Scanner API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Tsvetan Dimitrov",
            "email": "tsvetan.dimitrov23@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://www.mit.edu/~amini/LICENSE.md"
        },
        "version": "1.0"
    },
    "host": "0.0.0.0:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/address/subscribe": {
            "post": {
                "description": "Subscribe and address to an observer for new inbound/outbound transactions in the latest block.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blocks"
                ],
                "summary": "Subscribe and address to an observer for new inbound/outbound transactions in the latest block.",
                "parameters": [
                    {
                        "description": "Address",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscribeAddress.request"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/address/{address}/transactions": {
            "get": {
                "description": "Get all transactions for a fixed block range given an address.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blocks"
                ],
                "summary": "Get all transactions for a fixed block range given an address.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Block Range",
                        "name": "blockRange",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/block/current": {
            "get": {
                "description": "Get current Ethereum block.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blocks"
                ],
                "summary": "Get current Ethereum block.",
                "responses": {}
            }
        },
        "/api/v1/subscription/{address}/transactions": {
            "get": {
                "description": "Get all transactions for a subscribed address.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blocks"
                ],
                "summary": "Get all transactions for a subscribed address.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "handlers.SubscribeAddress.request": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        }
    }
}
